import json
import logging
import logging.config
import os
from decimal import Decimal
from pathlib import Path

import orjson
from dotenv import load_dotenv
from flask_orjson import OrjsonProvider
from quart import Quart
{% if db_type != "none" -%}
from tortoise.contrib.quart import register_tortoise
{% endif -%}

load_dotenv()

with open(Path(__file__).parent / "logger_config.json", "r") as f:
    logging.config.dictConfig(json.load(f))


app = Quart(__name__)

@app.get("/healthz")
async def health():
    return "running"


@app.get("/ready")
async def ready():
    return "ready"

{% if db_type != "none" -%}
TORTOISE_ORM = {
    "connections": {"default": os.environ.get("DATABASE_URL")},
    "apps": {
        "models": {
            "models": ["{{ pkg_name }}.models", "aerich.models"],
            "default_connection": "default",
        }
    },
}

register_tortoise(
    app,
    config=TORTOISE_ORM,
    generate_schemas=False,
)
{% endif -%}

if __name__ == "__main__":
    app.run()
