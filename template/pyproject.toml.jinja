[project]
name = "{{ pkg_name }}"
version = "0.1.0"
description = "Copier template for generic Python 3 project with tooling configuration for testing, linting and IDE support"
authors = [{ name = "Li Lin", email = "guru.lin@gmail.com" }]
readme = "README.md"
requires-python = ">= 3.12"
dependencies = [
    "python-dotenv >= 1.0.0",
{#- project_type -#}
{%- if project_type == "quart" %}
    "quart[dotenv]>=0.19.6",
    "flask-orjson>=2.0.0",
{%- endif %}
{#- db_type -#}
{%- if db_type == "postgresql" %}
    "tortoise-orm[asyncpg]>=0.21.6",
{%- elif db_type == "sqlite" %}
    "tortoise-orm>=0.21.6",
{%- endif %}
{%- if db_type != "none" %}
    "aerich>=0.7.2",
{%- endif %}
]

[tool.uv]
managed = true
dev-dependencies = [
    "pytest >= 7.4.0",
    "pytest-dotenv >= 0.5.2",
    "pytest-mock >= 3.14",
    "pytest-cov >= 4.1",
    "pytest-asyncio>=0.23.7",
    "pre-commit >= 3.7.1",
    "ruff >= 0.6.3",
    "mypy >= 1.11.2",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
pythonpath = ["."]
filterwarnings = [
    "ignore::DeprecationWarning",
]
env_files = [".env"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
]

# see ruff configuration options at
# https://docs.astral.sh/ruff/configuration/

[tool.ruff]
line-length = 90
indent-width = 4
exclude = [".git", "__pycache__", "venv", ".venv"]

[tool.ruff.lint]
select = [
    "E",
    "F",
    "W",
    "C",
    "I",
    "A",
] # Enable checks for PEP8, imports, and other standard rules
ignore = ["E203", "E266"]


[tool.ruff.lint.per-file-ignores]
"migrations/*.py" = ["E501"] # Ignore line too long for auto-generated migration files

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
mypy_path = "."

[[tool.mypy.overrides]]
module = [
    "dataclasses",
]
ignore_missing_imports = true

[tool.aerich]
tortoise_orm = "main.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."
