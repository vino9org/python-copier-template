import os

from dotenv import load_dotenv
{% if db_type != "none" %}
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.asyncio import async_sessionmaker, create_async_engine, AsyncSession

__all__ = ["SessionLocal", "engine"]
{% endif %}

load_dotenv()

{% if db_type != "none" %}
{% if asyncio_db %}
db_url = os.environ.get("SQLALCHEMY_DATABASE_URI", "sqlite+aiosqlite:///memory:")
engine = create_async_engine(db_url, echo=False)
SessionLocal = async_sessionmaker(
    expire_on_commit=False,
    class_=AsyncSession,
    bind=engine,
    autocommit=False,
    autoflush=False,
)
{% else %}
db_url = os.environ.get("SQLALCHEMY_DATABASE_URI", "sqlite:///memory:")
conn_args = {"check_same_thread": False} if db_url.startswith("sqlite") else {}
engine = create_engine(db_url, connect_args=conn_args, echo=False)
SessionLocal = sessionmaker(
    autocommit=False,
    autoflush=False,
    bind=engine,
)
{% endif %}
{% endif %}
